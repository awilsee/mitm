    1  sudo apt-get update
    2  sudo apt-get install asterisk
    3  ps -alx | grep asterisk
    4  sudo asterisk -r



    7  sudo apt-get install git
    8  git clone https://github.com/awilsee/mitm.git



    9  sudo apt-get install python-pip
   11  pip install bumpversion



   12  sudo apt-get install libpcsclite-dev libtalloc-dev libortp-dev libsctp-dev libmnl-dev
   13  sudo apt-get install  libdbi-dev libdbd-sqlite3 libsqlite3-dev sqlite3 libc-ares-dev 
   19  sudo apt-get install libdbi0-dev build-essential libtool autoconf automake
   20  sudo apt-get install libsqlite3-tcl sqlite-autoconf sqlite-autoconfg



// Alle Verzeichnisse, die über Git heruntergeladen wurden liegen in /home/mitm/




/* --- Osmo-core installieren ---- */

  git clone git://git.osmocom.org/libosmocore.git
  cd libosmocore/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install




/* --- Abis-Interface installieren ---- */

  git clone https://github.com/osmocom/libosmo-abis.git
  cd libosmo-abis/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install




/* --- Treiber der Ettus USRP-Box installieren ---- */

// zuerst IP des Rechners anpassen, so dass sich Box im selben Subnetz befindet
// hier Rechner: 192.168.10.10
// Ettus-Box:	 192.168.10.2

  sudo apt-get install --no-install-recommends libusb-1.0-0-dev libboost-dev
  sudo apt-get install libuhd-dev uhd-host
  sudo gpasswd -a $USER usrp
  
// Test, ob Box erreichbar
  uhd_find_devices




/* --- Osmo-trx installieren, Transceiver ---- */

  git clone git://git.osmocom.org/osmo-trx
  cd osmo-trx/
  autoreconf -fi
  ./configure 
  sudo make -j8
  sudo make install
  osmo-trx 		// für Test

// Warnung zu Threads unterdrücken
  cd /etc/security
  sudo gedit limits.conf 
// folgenden Eintrag hinzufügen:
  # Unterdrücken der Fehlermeldung bezüglich Threads in osmoTRX
  @usrp   -  rtprio  50




/* --- Osmo-ggsn installieren, k.A. warum ---- */

  git clone git://git.osmocom.org/openggsn
  cd openggsn/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install




/* --- Osmo-pcu installieren, k.A. warum ---- */

  git clone https://git.osmocom.org/osmo-pcu
  cd osmo-pcu/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install




/* --- Osmo-netif installieren, k.A. warum ---- */

  git clone git://git.osmocom.org/libosmo-netif
  cd libosmo-netif/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install




// benötigt OpenBSC
  sudo apt-get install libssl-dev



/* --- OpenBSC installieren ---- */

  git clone git://git.osmocom.org/openbsc
  cd openbsc/openbsc/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install

// OpenBSC konfigurieren
  cd /home/mitm/openbsc/openbsc/src/osmo-nitb
// hier die beiden Dateien kopieren
// - hlr.sqlite3	--> Tabelle "subscriber" enthält Daten der mobilen Endgeräte
//			    funktionierender Viewer: sudo apt-get install sqlitebrowser    
// - openbsc.cfg 	--> Hinweis: auf "unit-id" und Kanaleinstellungen achten




/* --- OsmoBTS installieren ---- */

  cd osmo-bts/
  autoreconf -fi
  ./configure --enable-trx
  sudo make -j8
  sudo make install

// OsmoBTS konfigurieren
  cd /home/mitm/osmo-bts/src/osmo-bts-trx
// hier die Datei osmo-bts.cfg kopieren




/* --- Sip-Connector installieren ---- */

// Sip-Sofia wird benötigt
  sudo apt-get install libsofia-sip-ua-glib-dev

  git clone git://git.osmocom.org/osmo-sip-connector.git
  cd osmo-sip-connector/
  autoreconf -fi
  ./configure
  sudo make -j8
  sudo make install

// Konfigurationsdatei "osmo-sip-connector.cfg" aus Ornder /home/mitm/osmo-sip-connector/doc/examples in /home/mitm/osmo-sip-connector/ kopieren und anpassen 

// Funktionstest
  osmo-sip-connector -c osmo-sip-connector.cfg




/* --- Asterisk konfigurieren ---- */

  cd /etc/asterisk/

  sudo gedit sip.conf

//folgendes anhängen:
[GSM]
type=friend
host=127.0.0.1
dtmfmode=rfc2833
canreinvite=no
disallow=all
allow=gsm
context=gsmsubscriber
port=5069


  sudo gedit extensions.conf 

//folgendes anhängen:
[gsmsubscriber]
exten=>_XXXXX,1,Dial(SIP/GSM/${EXTEN})
exten=>_XXXXX,n,Playback(vm-nobodyavail)
exten=>_XXXXX,n,HangUp





// Viewer für SQLite-Datenbanken
  sudo apt-get install sqlitebrowser

// Wireshark 
  sudo apt-get install wireshark tshark 







---------------


/* --- GSM-Netz in Betrieb nehmen ---- */

1.)
// Transceiver starten (vor der BTS starten)
  cd /home/mitm/osmo-trx
  sudo osmo-trx -f



2.)
// Osmo-NitB starten
  cd /home/mitm/openbsc/openbsc/src/osmo-nitb
Terminal starten 
  osmo-nitb -c /home/mitm/openbsc/openbsc/src/osmo-nitb/openbsc.cfg -l /home/mitm/openbsc/openbsc/src/osmo-nitb/hlr.sqlite3 -P -C --debug=DRLL:DCC:DMM:DRR:DRSL:DNM

// für Aufruf mit Sip-Connector
osmo-nitb -c /home/mitm/openbsc/openbsc/src/osmo-nitb/openbsc.cfg -l /home/mitm/openbsc/openbsc/src/osmo-nitb/hlr.sqlite3 -P -C --debug=DRLL:DCC:DMM:DRR:DRSL:DNM -M /tmp/bsc_mncc



3.)
// OsmoBTS starten
  cd /home/mitm/osmo-bts/src/osmo-bts-trx
  sudo osmo-bts-trx -c osmo-bts.cfg


4.)
// Asterisk starten
  sudo asterisk -r





------


Wireshark






Installation von pcapsipdump
Herunterladen und Instruktionen folgen

Starten von pcapsipdump -> Aufnahme von Stream 
  515  sudo pcapsipdump -i lo -v 10 -d /home/aw/Wireshark/%Y%m%d/%H/%Y%m%d-%H%M%S-%f-%t-%i.pcap -U





464  sudo asterisk -r	//falls nicht geht Asterisk zuerst noch starten
-> in CLI "core restart gracefully"

//umwandeln der mit Wireshark exportierten raw-Files in .wav
  539  sox -t gsm -r 8000 -c 1 1Hin.raw 1Hin.wav

  486  git clone https://gist.github.com/d2e9d05e082ce273962d742eb9acac16.git
  488  cd pcap2wav/
  489  mv pcap2wav pcap2wav.sh
  490  chmod +x pcap2wav.sh 
  495  ./pcap2wav.sh -z ~/Wireshark/20170920/15/20170920-150349-24144-23120-fc90602d-18a6-1236-b698-54ee75d74cd1.pcap 1wav.wav



